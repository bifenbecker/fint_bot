import asyncio
import logging
from textwrap import dedent

from aiogram import F, Router
from aiogram.types import CallbackQuery as CQ
from aiogram.types.input_file import FSInputFile

from db.models import CardItem, Player
from db.queries.games_queries import lucky_shot
from keyboards.cards_kbs import accept_new_card_btn
from keyboards.games_kbs import games_kb, lucky_shot_btn, no_free_ls_btn
from middlewares.actions import ActionMiddleware
from utils.format_texts import format_new_free_card_text
from utils.misc import format_delay_text

flags = {"throttling_key": "default"}
router = Router()
router.callback_query.middleware(ActionMiddleware())


@router.callback_query(F.data == "games", flags=flags)
async def games_cmd(c: CQ, action_queue):
    try:
        del action_queue[str(c.from_user.id)]
    except Exception as error:
        logging.info(f"Action delete error\n{error}")

    txt = "–¢—É—Ç –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∏–Ω–∏-–∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –≤—ã—è—Å–Ω–∏—Ç—å, –∫—Ç–æ –∏–∑ –≤–∞—Å –ª—É—á—à–∏–πü•á"
    await c.message.edit_text(txt, reply_markup=games_kb)


@router.callback_query(F.data == "back_to_games", flags=flags)
async def back_to_games_cmd(c: CQ, action_queue):
    try:
        del action_queue[str(c.from_user.id)]
    except Exception as error:
        logging.info(f"Action delete error\n{error}")

    txt = "–¢—É—Ç –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∏–Ω–∏-–∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –≤—ã—è—Å–Ω–∏—Ç—å, –∫—Ç–æ –∏–∑ –≤–∞—Å –ª—É—á—à–∏–πü•á"
    await c.message.delete()
    await c.message.answer(txt, reply_markup=games_kb)


@router.callback_query(F.data == "luckystrike", flags=flags)
async def lucky_shot_cmd(c: CQ, action_queue):
    try:
        del action_queue[str(c.from_user.id)]
    except Exception as error:
        logging.info(f"Action delete error\n{error}")
    txt = "‚òòÔ∏è –£–¥–∞—á–Ω—ã–π —É–¥–∞—Ä - —ç—Ç–æ –º–∏–Ω–∏-–∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –¥–µ–ª–∞–µ—à—å 1 —É–¥–∞—Ä –ø–æ –≤–æ—Ä–æ—Ç–∞–º. –ï—Å–ª–∏ –∑–∞–±–∏–≤–∞–µ—à—å - –ø–æ–ª—É—á–∞–µ—à—å –æ–¥–Ω—É —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É. –ï—Å–ª–∏ –Ω–µ –∑–∞–±–∏–≤–∞–µ—à—å - –ø—Ä–æ–±—É–µ—à—å –µ—â–µ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è"
    await c.message.edit_text(txt, reply_markup=lucky_shot_btn)


@router.callback_query(F.data == "hitls", flags=flags)
async def hit_lucky_shot_cmd(c: CQ, ssn, action_queue, bot):
    res = await lucky_shot(ssn, c.from_user.id, bot)
    if isinstance(res, int):
        time = await format_delay_text(res)
        txt = f"""
        üçÄ –¢—ã –Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ–±–æ–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!
        –ü—Ä–∏—Ö–æ–¥–∏ —á–µ—Ä–µ–∑ {time} ‚è± –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–¥–∞—Ä—ã!

        üí∞ 3 —É–¥–∞—Ä–∞ - 125 —Ä—É–±
        üí∞ 6 —É–¥–∞—Ä–æ–≤ - 235 —Ä—É–±
        üí∞ 9 —É–¥–∞—Ä–æ–≤ (–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —à–∞–Ω—Å) - 350 —Ä—É–±

        –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∏—Ç—å, —Ç–æ –æ–ø–ª–∞—Ç—É –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - @fintsupport
        """
        await c.message.edit_text(dedent(txt), reply_markup=no_free_ls_btn)
    elif res == "no_cards":
        await c.answer("‚ö†Ô∏è –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ")
    else:
        try:
            await c.message.delete()
        except Exception as error:
            logging.error(f"Del error | chat {c.from_user.id}\n{error}")

        await asyncio.sleep(4.5)
        card: CardItem = res[0]
        user: Player = res[1]
        if card == "lose":
            if user.lucky_quants > 0:
                txt = f"‚òòÔ∏è –¢—ã –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –∏ —Å–µ–π—á–∞—Å —Ç–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æüòî\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ø—ã—Ç–æ–∫ - {user.lucky_quants}"
                await c.message.answer(txt, reply_markup=lucky_shot_btn)
            else:
                txt = f"‚òòÔ∏è –¢—ã –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –∏ —Å–µ–π—á–∞—Å —Ç–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æüòî\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤ –∏–ª–∏ –ø–æ–ª—É—á–∏ 3 —É–¥–∞—Ä–∞ –∑–∞ 125 —Ä—É–±–ª–µ–π!"
                await c.message.answer(txt, reply_markup=no_free_ls_btn)
        else:
            txt = "‚òòÔ∏è –¢—ã –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –∏ –≤—ã–∏–≥—Ä–∞–ª –æ–¥–Ω—É —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É!\n\n"
            card_txt = await format_new_free_card_text(card)
            await c.message.answer_photo(
                card.image, txt + card_txt, reply_markup=accept_new_card_btn)

    try:
        del action_queue[str(c.from_user.id)]
    except Exception as error:
        logging.info(f"Action delete error\n{error}")
