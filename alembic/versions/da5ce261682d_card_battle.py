"""card_battle

Revision ID: da5ce261682d
Revises: 20d3f0fbd778
Create Date: 2025-02-12 15:42:19.142103

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'da5ce261682d'
down_revision: Union[str, None] = '20d3f0fbd778'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    cardbattlegamestatus = postgresql.ENUM('FINISHED', 'WAITING_FOR_RED', 'WAITING_FOR_BLUE', name='cardbattlegamestatus')

    cardpositiontype = postgresql.ENUM('GOALKEEPER', 'DEFENDER', 'MIDFIELDER', 'FORWARD', name='cardpositiontype')

    cardbattleplayerstatus = postgresql.ENUM('READY', 'PLAYING', 'SEARCHING', name='cardbattleplayerstatus')

    cardbattleturntype = postgresql.ENUM('ATTACK', 'DEFENSE', name='cardbattleturntype')

    cardbattlegamestatus.create(op.get_bind())
    cardbattleplayerstatus.create(op.get_bind())
    cardpositiontype.create(op.get_bind())
    cardbattleturntype.create(op.get_bind())

    op.create_table('cardbattle',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('player_blue_id', sa.BigInteger(), nullable=False),
    sa.Column('player_red_id', sa.BigInteger(), nullable=False),
    sa.Column('winner_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['player_blue_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['player_red_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.add_column('cardbattle', sa.Column('status', cardbattlegamestatus, nullable=True))


    op.create_table('usercardstobattle',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_card_id', sa.BigInteger(), nullable=False),
    sa.Column('battle_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['battle_id'], ['cardbattle.id'], ),
    sa.ForeignKeyConstraint(['user_card_id'], ['usercard.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cardbattleturn',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.BigInteger(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('battle_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['battle_id'], ['cardbattle.id'], ),
    sa.ForeignKeyConstraint(['card_id'], ['usercardstobattle.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.add_column('cardbattleturn', sa.Column('type', cardbattleturntype, nullable=False))

    op.add_column('carditem', sa.Column('position', cardpositiontype, nullable=True))
    op.add_column('carditem', sa.Column('attack_rate', sa.Integer(), nullable=True))
    op.add_column('carditem', sa.Column('defense_rate', sa.Integer(), nullable=True))
    op.add_column('carditem', sa.Column('general_rate', sa.Integer(), nullable=True))
    op.add_column('player', sa.Column('card_battle_rating', sa.Integer(), nullable=True))
    op.add_column('player', sa.Column('card_battle_status', cardbattleplayerstatus, nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('player', 'card_battle_status')
    op.drop_column('player', 'card_battle_rating')
    op.drop_column('carditem', 'general_rate')
    op.drop_column('carditem', 'defense_rate')
    op.drop_column('carditem', 'attack_rate')
    op.drop_column('carditem', 'position')
    op.drop_table('cardbattleturn')
    op.drop_table('usercardstobattle')
    op.drop_table('cardbattle')

    sa.Enum(name='cardbattlegamestatus').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='cardpositiontype').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='cardbattleplayerstatus').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='cardbattleturntype').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
