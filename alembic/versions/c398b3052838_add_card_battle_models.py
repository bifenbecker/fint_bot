"""Add Card Battle models

Revision ID: c398b3052838
Revises: 24bea688600f
Create Date: 2025-02-01 19:18:04.575909

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c398b3052838"
down_revision: Union[str, None] = "24bea688600f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    card_battle_game_status = sa.dialects.postgresql.ENUM(
        "FINISHED", "WAITING_FOR_RED", "WAITING_FOR_BLUE", name="cardbattlegamestatus"
    )
    card_battle_game_status.create(op.get_bind())

    card_battle_player_status = sa.dialects.postgresql.ENUM(
        "READY", "PLAYING", "SEARCHING", name="cardbattleplayerstatus"
    )
    card_battle_player_status.create(op.get_bind())

    op.create_table(
        "cardbattle",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "FINISHED",
                "WAITING_FOR_RED",
                "WAITING_FOR_BLUE",
                name="cardbattlegamestatus",
            ),
            nullable=True,
        ),
        sa.Column("player_blue_id", sa.BigInteger(), nullable=False),
        sa.Column("player_red_id", sa.BigInteger(), nullable=False),
        sa.Column("winner_id", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["player_blue_id"],
            ["player.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_red_id"],
            ["player.id"],
        ),
        sa.ForeignKeyConstraint(
            ["winner_id"],
            ["player.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cardbattleturn",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("player_id", sa.BigInteger(), nullable=False),
        sa.Column("card_id", sa.BigInteger(), nullable=False),
        sa.Column("battle_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["battle_id"],
            ["cardbattle.id"],
        ),
        sa.ForeignKeyConstraint(
            ["card_id"],
            ["usercard.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["player.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cardstobattle",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_card_id", sa.BigInteger(), nullable=False),
        sa.Column("battle_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["battle_id"],
            ["cardbattle.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_card_id"],
            ["usercard.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "player", sa.Column("card_battle_rating", sa.Integer(), nullable=True)
    )
    op.add_column(
        "player",
        sa.Column(
            "card_battle_status",
            sa.Enum("READY", "PLAYING", "SEARCHING", name="cardbattleplayerstatus"),
            nullable=True,
        ),
    )
    op.alter_column(
        "player",
        "rating",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "player",
        "rating",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.drop_column("player", "card_battle_status")
    op.drop_column("player", "card_battle_rating")
    op.drop_table("cardstobattle")
    op.drop_table("cardbattleturn")
    op.drop_table("cardbattle")
    card_battle_game_status = sa.dialects.postgresql.ENUM(
        "FINISHED", "WAITING_FOR_RED", "WAITING_FOR_BLUE", name="cardbattlegamestatus"
    )
    card_battle_game_status.drop(op.get_bind())

    card_battle_player_status = sa.dialects.postgresql.ENUM(
        "READY", "PLAYING", "SEARCHING", name="cardbattleplayerstatus"
    )
    card_battle_player_status.drop(op.get_bind())
    # ### end Alembic commands ###
